<h1>HTML Table</h1>
<input type="file" id="excelFileInput" accept=".xls,.xlsx" />
<div class="row">
    <div class="col-2">
        <button class="btn btn-dark" id="upload">upload</button>
    </div>
    <div class="col-10">
        <select name="option" class="form-control">
            <option value="1">حركات الماكينات</option>
        </select>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div id="progress" class="progress" style="height:30px">
            <div id="bar" class="progress-bar bg-success" role="progressbar" style="width: 0%;" aria-valuenow="25"
                aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>
<div style="display: none;">
    <div class="row" style="display: none;">
        <div class="col">table DB</div>
        <div class="col"><input class="form-control"></div>
    </div>
    <button id="addRow">Add Row</button>
    <table id="table1">
        <thead>
            <tr>
                <th>excel</th>
                <th>database</th>
                <th>delete</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>
<script>
    let cols_select;
    document.getElementById('addRow').addEventListener('click', function () {
        const table = document.querySelector('#table1 tbody');
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td style="background-color:;text-align:center"><button onclick="this.parentNode.parentNode.remove()">-</button></td>
            `;
        table.appendChild(newRow);
    });
</script>
<div id="tableContainer"></div>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script>
    let jsonArray;
    // Function to handle file upload and conversion
    document.getElementById('excelFileInput').addEventListener('change', function (event) {
        const file = event.target.files[0];
        if (!file) return;
        const reader = new FileReader();
        reader.onload = function (e) {
            const data = new Uint8Array(e.target.result);

            const workbook = XLSX.read(data, { type: 'array' });

            // Assuming the first sheet contains the data
            const worksheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[worksheetName];

            // Convert the worksheet to JSON
            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

            // Generate HTML table from JSON data
            const table = document.createElement('table');
            const thead = document.createElement('thead');
            const tbody = document.createElement('tbody');

            table.appendChild(thead);
            table.appendChild(tbody);

            ///console.log(jsonData);

            jsonArray = jsonData.map((row, rowIndex) => {
                if (rowIndex === 0) {
                    return row;
                }
                const obj = {};
                row.forEach((cell, cellIndex) => {
                    obj[jsonData[0][cellIndex]] = cell;
                });
                return obj;
            }).filter((row, rowIndex) => rowIndex !== 0);



            jsonData.forEach((row, rowIndex) => {
                const tr = document.createElement('tr');
                row.forEach((cell) => {
                    const cellElement = document.createElement(rowIndex === 0 ? 'th' : 'td');
                    cellElement.textContent = cell || '';
                    tr.appendChild(cellElement);
                });
                if (rowIndex === 0) {
                    thead.appendChild(tr);
                }
                else {
                    tbody.appendChild(tr);
                }


            });
            if (jsonArray.length > 0) {
                Object.keys(jsonArray[0]).forEach((r, i) => {
                    const table = document.querySelector('#table1 tbody');
                    const newRow = document.createElement('tr');
                    newRow.innerHTML = `
                <td contenteditable="true">${r}</td>
                <td contenteditable="true">${r}</td>
                <td style="background-color:;text-align:center"><button onclick="this.parentNode.parentNode.remove()">-</button></td>
            `;
                    table.appendChild(newRow);
                });
                console.log();
            }
            // Append the table to the container
            document.getElementById('tableContainer').innerHTML = '';
            document.getElementById('tableContainer').appendChild(table);
            dataTable = $(table).DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'colvis',
                    'excel',
                    'print'
                ]
            });
        };

        reader.readAsArrayBuffer(file);
    });
    $(document).ready(function () {
        $("#upload").click(function (e) {
            e.preventDefault();
            //console.log(jsonArray);
            upload2(jsonArray);
            

        });
    });

    // from macup.cshtml

    var run = false;
    var total = 0,
        tempDone = 0;

    function upload2(arr) {
        var promises = [];
        if (!run) { total = arr.length; tempDone = 0 }
        run = true;
        console.log(arr.length);
        for (var i = 0; i < 1000 && i < arr.length; i++) {
            //log(arr[i]);
             //console.log("arr=>",arr[i]);
            console.log(
            {
                FN: jsonArray[i]["No."],
                DT: jsonArray[i]["Date/Time"],
                TP: jsonArray[i].Status.substr(2),
                IP: jsonArray[i]["Location ID"]
            }
            );
            var request = $.ajax(//begin ajax card
                {
                    type: 'POST',
                    dataType: 'JSON',
                    url: '/mac/upload',//vary important #change
                    data:
                    {
                        FN: jsonArray[i]["No."],
                        DT: jsonArray[i]["Date/Time"],
                        TP: jsonArray[i].Status.substr(2),
                        IP: jsonArray[i]["Location ID"]
                    },
                    success:
                        function (response) {
                            console.log("Success: " + response);
                            tempDone++;
                            $("#bar").css("width", tempDone / total * 100 + "%");
                            $("#bar").html((tempDone / total * 100).toFixed(2) + "%");
                        },
                    error:
                        function (response) {
                            console.log("Error: " + response);
                        }
                });
            promises.push(request);
        }
        $.when.apply($, promises).always(function () {
            //console.log('All Done');
            arr.splice(0, 1000);
            if (arr.length > 0) upload2(arr);
            else { run = false; /*alert("job done");*/ }
        });
    }
</script>